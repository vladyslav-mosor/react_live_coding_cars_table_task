{"version":3,"sources":["api/cars.ts","api/colors.ts","App.tsx","index.tsx"],"names":["id","brand","rentPrice","colorId","name","App","carWithColors","carsFromServer","map","car","color","colorsFromServer","find","useState","query","setQuery","visibleCars","lowerQuery","toLocaleLowerCase","filter","includes","selectedColor","setSelectedColor","type","placeholder","value","onChange","event","target","style","ReactDOM","render","document","getElementById"],"mappings":"mOAAe,GACb,CACEA,GAAI,EAAGC,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEH,GAAI,EAAGC,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEH,GAAI,EAAGC,MAAO,UAAWC,UAAW,IAAKC,QAAS,GAEpD,CACEH,GAAI,EAAGC,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEH,GAAI,EAAGC,MAAO,SAAUC,UAAW,GAAIC,QAAS,GAElD,CACEH,GAAI,EAAGC,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEH,GAAI,EAAGC,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEH,GAAI,EAAGC,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEH,GAAI,EAAGC,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEH,GAAI,GAAIC,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAElD,CACEH,GAAI,GAAIC,MAAO,aAAcC,UAAW,IAAKC,QAAS,IChC3C,GACb,CAAEH,GAAI,EAAGI,KAAM,SACf,CAAEJ,GAAI,EAAGI,KAAM,SACf,CAAEJ,GAAI,EAAGI,KAAM,Q,OCcJC,EAAgB,WAC3B,IAAMC,EAAwBC,EAAeC,KAAI,SAAAC,GAC/C,IAAMC,EAAQC,EAAiBC,MAAK,qBAAGZ,KAAgBS,EAAIN,WAE3D,OAAO,2BACFM,GADL,IAEEC,aAIJ,EAA0BG,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEIC,EAAW,YAAOV,GAEtB,GAAIQ,EAAO,CACT,IAAMG,EAAaH,EAAMI,oBAEzBF,EAAcV,EACXa,QAAO,qBAAGlB,MAAkBiB,oBAAoBE,SAASH,MAG9D,IAMA,EAA0CJ,mBAAS,GAAnD,mBAAOQ,EAAP,KAAsBC,EAAtB,KAEID,IACFL,EAAcV,EACXa,QAAO,gBAAGT,EAAH,EAAGA,MAAH,OAAoB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOV,MAAOqB,MASzC,OACE,gCACE,uBACEE,KAAK,SACLC,YAAY,oBACZC,MAAOX,EACPY,SAzBoB,SACxBC,GAEAZ,EAASY,EAAMC,OAAOH,UAyBpB,yBACEA,MAAOJ,EACPK,SAjBoB,SACxBC,GAEAL,GAAkBK,EAAMC,OAAOH,QAY7B,UAIE,mDACCd,EAAiBH,KAAI,gBAAGJ,EAAH,EAAGA,KAAMJ,EAAT,EAASA,GAAT,OACpB,wBAEEyB,MAAOzB,EAFT,SAIGI,GAHIJ,SAQX,kCACE,gCACE,+BACE,oCACA,uCACA,uCACA,iDAGJ,gCACGgB,EAAYR,KAAI,gBACfR,EADe,EACfA,GACAC,EAFe,EAEfA,MACAC,EAHe,EAGfA,UACAQ,EAJe,EAIfA,MAJe,OAMf,+BACE,6BAAKV,IACL,6BAAKC,IACL,oBAAI4B,MAAO,CAAEnB,MAAM,GAAD,cAAKA,QAAL,IAAKA,OAAL,EAAKA,EAAON,OAA9B,gBAAyCM,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAON,OAChD,6BAAKF,MAJEF,e,MC5FrB8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0f446a62.chunk.js","sourcesContent":["export default [\n  {\n    id: 1, brand: 'Audi', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 2, brand: 'Audi', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 3, brand: 'Ferarri', rentPrice: 500, colorId: 3,\n  },\n  {\n    id: 4, brand: 'Ford', rentPrice: 80, colorId: 1,\n  },\n  {\n    id: 5, brand: 'Peugot', rentPrice: 50, colorId: 1,\n  },\n  {\n    id: 6, brand: 'Ford', rentPrice: 150, colorId: 1,\n  },\n  {\n    id: 7, brand: 'Ford', rentPrice: 140, colorId: 2,\n  },\n  {\n    id: 8, brand: 'Lada', rentPrice: 20, colorId: 3,\n  },\n  {\n    id: 9, brand: 'Opel', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 10, brand: 'Opel', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 11, brand: 'Mitsubishi', rentPrice: 300, colorId: 1,\n  },\n];\n","export default [\n  { id: 1, name: 'white' },\n  { id: 2, name: 'black' },\n  { id: 3, name: 'red' },\n];\n","import React, { useState } from 'react';\nimport carsFromServer from './api/cars';\nimport colorsFromServer from './api/colors';\n\ninterface Cars {\n  id: number,\n  brand: string,\n  rentPrice: number,\n  colorId: number,\n  color: Color | undefined,\n}\n\ninterface Color {\n  id: number,\n  name: string,\n}\n\nexport const App: React.FC = () => {\n  const carWithColors: Cars[] = carsFromServer.map(car => {\n    const color = colorsFromServer.find(({ id }) => id === car.colorId);\n\n    return {\n      ...car,\n      color,\n    };\n  });\n\n  const [query, setQuery] = useState('');\n\n  let visibleCars = [...carWithColors];\n\n  if (query) {\n    const lowerQuery = query.toLocaleLowerCase();\n\n    visibleCars = carWithColors\n      .filter(({ brand }) => brand.toLocaleLowerCase().includes(lowerQuery));\n  }\n\n  const handleQueryChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ): void => {\n    setQuery(event.target.value);\n  };\n\n  const [selectedColor, setSelectedColor] = useState(0);\n\n  if (selectedColor) {\n    visibleCars = carWithColors\n      .filter(({ color }) => color?.id === selectedColor);\n  }\n\n  const handleColorChange = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ): void => {\n    setSelectedColor(+event.target.value);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"search\"\n        placeholder=\"Find by car brand\"\n        value={query}\n        onChange={handleQueryChange}\n      />\n\n      <select\n        value={selectedColor}\n        onChange={handleColorChange}\n      >\n        <option>Chose a color</option>\n        {colorsFromServer.map(({ name, id }) => (\n          <option\n            key={id}\n            value={id}\n          >\n            {name}\n          </option>\n        ))}\n      </select>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Brand</th>\n            <th>Color</th>\n            <th>Rent price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {visibleCars.map(({\n            id,\n            brand,\n            rentPrice,\n            color,\n          }) => (\n            <tr key={id}>\n              <td>{id}</td>\n              <td>{brand}</td>\n              <td style={{ color: `${color?.name}` }}>{color?.name}</td>\n              <td>{rentPrice}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}